    booking:
      type: object
      description: The booking information describing the state and details of the
        transaction
      required:
        - id
        - state
        - leg
        - customer
        - token
      allOf:
        - $ref: '#/components/schemas/new-booking'
      properties:
        id:
          description: The identifier MaaS will be using to referring to the booking
          type: string
        state:
          $ref: '#/components/schemas/booking-state'
        terms:
          $ref: '#/components/schemas/booking-state'
        token:
          $ref: '#/components/schemas/token'
        meta:
          description: Arbitrary metadata that a TO can add
          type: object
    booking-state:
      description: The life-cycle state of the booking (from NEW to FINISHED)
      type: string
      enum: [NEW, BOOKED, CANCELLED, PAID, UPDATEREQUESTED, UPDATED, STARTED, FINISHED]
      example: BOOKED
    coordinates:
      type: array
      description: a lon, lat (WGS84, EPSG:4326) in an array
      minLength: 2
      maxLength: 2
      items:
        type: number
    customer:
      type: object
      required:
        - id
      properties:
        id:
          description: The identifier MaaS uses to identify the customer
          type: string
          example: 123456
        first-name:
          description: First name of the customer
          type: string
          example: John
        last-name:
          description: Last name of the customer
          type: string
          example: Doe
        phone:
          description: Phone number that the customer may be reached from
          type: string
    
    day:
      type: string
      enum: [MON, TUE, WED, THU, FRI, SAT, SUN]
    distance:
      description: The estimated distance travelled in the leg (in meters)
      type: integer
      minimum: 0
      example: 7250
    duration:
      description: A duration of some time (relative to time) in milliseconds
      type: integer
      maximum: 2147483647
      minimum: 0
      example: 11112
    error:
      type: object
      description: An error that the service may send, e.g. in case of invalid input,
        missing authorization or internal service error.
      required:
        - message
        - code
      properties:
        message:
          type: string
          description: A human readable error message (preferrably in English)
          example: invalid input
        code:
          type: string
          description: A TO internal error code, used for reference
          example: 12345
    
    fare:
      description: fare price for specific leg request [amended from MaaS-API] This should be in the base unit as defined by the ISO 4217 currency code with the appropriate number of decimal places and omitting the currency symbol. e.g. if the price is in US Dollars the price would be 9.95
      type: number
      example: 9.95
    free-asset-status:
      required:
        - assets
        - asset-id
        - place
        - is-reserved
        - is-disabled
        - pricing
      properties:
        assets:
          type: object
          description: Array that contains one object per asset that is currently available
          properties:
            asset-id:
              type: string
              description: unique identifier of an asset
            place:
              $ref: '#/components/schemas/place'
            is-reserved:
              type: boolean
              description: true indicates the bike is currently reserved for someone else
            is-reserved-from:
              $ref: '#/components/schemas/timestamp' 
              description: optional addition to determine if an asset is reserved in the future
            is-reserved-to:
              $ref: '#/components/schemas/timestamp' 
              description: optional addition to determine when asset is available in the future
            is-disabled:
              type: boolean
              description: true indicates the asset is currently disabled (broken)
            pricing:
              $ref: '#/components/schemas/fare'
            rental-url:
              type: string
              description: deep-linking option from GBFS+
              format: URL
              example: https://www.rentmyfreebike.com/rental
            type-of-asset:
              description: added to give option to describe asset when checking availability
              $ref: '#/components/schemas/options'
    lat:
      type: number
      description: The field value must be a valid WGS84 latitude in decimal degrees format.
      minimum: -90
      maximum: 90
      example: 52.376883
    leg:
      type: object
      description: A OpenTripPlanner compatible definition of a leg (see OpenTripPlanner docs for reference)
      additionalProperties: true
      required:
        - from
        - to
        - mode
        - start-time
        - end-time
      properties:
        from:
          description: The coordinates the TO should use to resolve leg start location
          $ref: '#/components/schemas/place'
        to:
          description: The coordinates the TO should use to resolve leg finish location
          $ref: '#/components/schemas/place'
        start-time:
          $ref: '#/components/schemas/timestamp'
        end-time:
          $ref: '#/components/schemas/timestamp'
        mode:
          $ref: '#/components/schemas/mode'
        departure-delay:
          $ref: '#/components/schemas/duration'
        arrival-delay:
          $ref: '#/components/schemas/duration'
        distance:
          $ref: '#/components/schemas/distance'
        fare:
          $ref: '#/components/schemas/fare'
        route:
          type: string
        route-short-name:
          type: string
        route-long-name:
          type: string
        agency-id:
          type: string
        leg-geometry:
          $ref: '#/components/schemas/leg-geometry'
    leg-geometry:
      type: object
      additionalProperties: true
      properties:
        points:
          type: array
          items: 
            $ref: '#/components/schemas/coordinates'
          minLength: 1
    lon:
      type: number
      description: The field value must be a valid WGS84 longitude in decimal degrees format.
      minimum: -180
      maximum: 180
      example: 4.90017
    mode:
      description: The modality of the leg
      required:
        - modality
      properties:
        modality:
          type: string
          enum: [WALK, BIKE, CARGO-BIKE, MOPED, SCOOTER, STEP, SEGWAY, CAR, TAXI, PUBLIC-BUS, COACH-BUS, OFFICE-BUS, TRAM, LIGHTRAIL, METRO, TRAIN, FERRY, WATER-TAXI, WATER-BUS, AIRLINE]
        fuel:
          type: string
          enum: [GASOLINE, DIESEL, ELECTRIC, HYBRID-GASOLINE, HYBRID-DIESEL, HYBRID-GAS, HYBRID-GAS, HYDROGEN, GAS, BIO-MASS, KEROSINE, OTHER]
        energy-label:
          type: string
          enum: [A,B,C,D,E]
        co2-per-km:
          type: number
        brand:
          type: string
        model:
          type: string
        building-year:
          type: number
    monitor:
      type: string
      description: provides current asset location & duration and distance of the current leg
      required:
        - location
        - duration
        - distance
      properties:
        location:
          $ref: '#/components/schemas/coordinates'
        duration:
          $ref: '#/components/schemas/duration'
        distance:
          $ref: '#/components/schemas/distance'
    new-booking:
      type: object
      description: A new booking, created by MaaS POST request in 'new' state
      required:
        - leg
        - customer
      properties:
        state:
          type: string
          description: The state of the booking (always new for new bookings)
          enum: [NEW]
        leg:
          $ref: '#/components/schemas/leg'
        customer:
          $ref: '#/components/schemas/customer'
    notification:
      description: notifies the MaaS operator of issues with a booking [addendum]
      type: string
      enum: [VEHICLE-NOT-AVAILABLE, USER-NO-SHOW]
      example: VEHICLE-NOT-AVAILABLE
    options:
      type: object
      description: Containing an array of available options matching the query
      properties:
        leg:
          $ref: '#/components/schemas/options-leg'
        meta:
          $ref: '#/components/schemas/type-of-asset'
    options-coordinates:
      deprecated: true
      type: object
      properties:
        lat:
          $ref: '#/components/schemas/lat'
        lon:
          $ref: '#/components/schemas/lon'
    options-leg:
      type: object
      properties:
        start-time:
          $ref: '#/components/schemas/timestamp'
        end-time:
          $ref: '#/components/schemas/timestamp'
        from:
          $ref: '#/components/schemas/coordinates'
        to:
          $ref: '#/components/schemas/coordinates'
    options-meta:
      deprecated: true
      description: replaced with type-of-asset
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
          format: url
        asset:
          type: object
          properties:
            passengers:
              type: integer
    period:
      type: object
      properties:
        start-time:
          $ref: '#/components/schemas/timestamp'
        end-time:
          $ref: '#/components/schemas/timestamp'
    place:
      type: object
      description: a origin or destination of a leg, non 3D. lon/lat in WGS84.
      additionalProperties: true
      required:
        - location
      properties:
        name:
          description: Human readable name of the place
          type: string
        stop-reference:
          type: array
          items:
            $ref: '#/components/schemas/stop-reference'
        location:
          $ref: '#/components/schemas/coordinates'
    station-information:
      required:
        - station-id
        - name
        - location
      properties:  
            station-id:
              type: string
              description: unique identifier of a station
              example: XX:Y:12345678
            name:
              type: string
              description: public name of the station
              example: Island Central
            location:
              $ref: '#/components/schemas/coordinates'
            address:
              type: string
              description: Valid street number and name where station is located. This field is intended to be an actual address, not a free form text description (see "crossstreet")
              example: Main Road 1
            cross-street:
              type: string
              description: Cross street of where the station is located. This field is intended to be a descriptive field for human consumption. In cities, this would be a cross street, but could also be a description of a location in a park, etc.
              example: on the corner with Secondary Road 
            region-id:
              type: string
              description: ID of the region where the station is located (see "system-regions")
            postal-code:
              type: string
              description: Postal code where station is located
              example: X123456
            rental-methods:
              type: array
              description: Array of enumerables containing the payment methods accepted at this station. 
              items:
                type: string
                enum: [KEY, CREDITCARD, PAYPASS, APPLEPAY, ANDROIDPAY, TRANSITCARD, ACCOUNTNUMBER, PHONE]
              example: [CREDITCARD,PAYPASS,APPLEPAY]
            rental-url:
              type: string
              format: URL
              example: https://www.rentmyfreebike.com
    
    stop-reference:
      type: object
      description: reference to a stop (can be nation specific). This can help to specific pinpoint a (bus) stop. Extra information about the stop is not supplied; you should find it elsewhere.
      required:
        - type
        - id
        - country
      properties:
        type:
          type: string
          description: type of external reference (GTFS, CHB). This should be extended
          enum: [GTFS-STOP-ID, GTFS-STOP-CODE, GTFS-AREA-ID, CHB-STOP-PLACE-CODE, CHB-QUAY-CODE, NS-CODE]
        id:
          type: string
          description: this field should contain the complete ID. E.g. NL:S:13121110 or BE:S:79640040
        country:
          type: string
          description: country where the stop is located
    support-status:
      description: the current status of support
      type: object
      properties:
        status:
          type: string
          enum: [PROCESSING, UPDATE-REQUESTED, RESOLVED, CANCELLED]
          example: PROCESSING
        time-to-resolution:
          type: integer
          description: time in minutes to expected resolution of support request
          example: 9
    system-alert:
      type: object
      required:
        - alert-id
        - alert-type
        - start
        - summary
      properties:
        alert-id:
          type: string
          description: a unique identifier for this alert
        alert-type:
          type: string
          enum: [SYSTEMCLOSURE, STATIONCLOSURE, STATIONMOVE, OTHER]
        start-and-end-times:
          description: Array of hashes with the keys "start" and "end" indicating when the alert is in effect (e.g. when the system or station is actually closed, or when it is scheduled to be moved). If this array is omitted then the alert should be displayed as long as it is in the feed.
          type: array
          items:
            $ref: '#/components/schemas/period'
        station-ids:
          type: array
          items:
            type: string
          description: Array of strings - If this is an alert that affects one or more stations, include their ids, otherwise omit this field. If both stationIDs and regionIDs are omitted, assume this alert affects the entire system
          example: stationID0001
        region-id:
          type: array
          items:
            type: string
          description: Array of strings - If this system has regions, and if this alert only affects certain regions, include their ids, otherwise, omit this field. If both stationIDs and regionIDs are omitted, assume this alert affects the entire system
          example: regionID0001
        url:
          type: string
          format: hostname
          description: URL where the customer can learn more information about this alert, if there is one
          example: http://www.rentmyfreebike.com/alerts
        summary:
          type: string
          description: A short summary of this alert to be displayed to the customer
          example: station closed
        description:
          type: string
          description: Detailed text description of the alert
          example: station closed indefinitely due to vandalism
        last-updated:
          $ref: '#/components/schemas/timestamp'
    system-calendar:
      type: object
      required:
        - start-month
        - start-day
        - end-month
        - end-day
      properties:
        start-month:
          type: integer
          minimum: 1
          maximum: 12
          description: Starting month for the system operations (1-12)
          example: 1
        start-day:
          type: integer
          minimum: 1
          maximum: 31
          description: Starting day for the system operations (1-31)
          example: 1
        start-year:
          type: integer
          description: Starting year for the system operations
          example: 2019
        end-month:
          type: integer
          minimum: 1
          maximum: 12
          description: Ending month for the system operations (1-12)
          example: 12
        end-day:
          type: integer
          minimum: 1
          maximum: 31
          description: Ending day for the system operations (1-31)
          example: 31
        end-year:
          type: integer
          description: Ending year for the system operations
          example: 2099
    system-hours:
      required:
        - user-type
        - days
        - start-time
        - end-time
      properties:
        user-type:
          type: string
          description: This indicates that this set of rental hours applies to either members or non-members only.
          enum: [MEMBER, NON-MEMBERS]
          example: MEMBER
        start-time:
          $ref: '#/components/schemas/time'
        end-time:
          $ref: '#/components/schemas/time'
        days:
          type: array
          description: An array of abbreviations (first 3 letters) of English names of the days of the week that this hour object applies to (i.e. ["mon", "tue"]). Each day can only appear once within all of the hours objects in this feed.    		  
          items:
            $ref: '#/components/schemas/day'
    system-information:
      description: operation successful
      required:
        - system-id
        - language
        - name
        - timezone
        - type-of-system
      properties:
          system-id:
            description: identifier for this transport system. This should be globally unique (even between different systems)
            type: string
            example: XXTO0001
          language:
            description: An IETF language tag indicating the language that will be used throughout the rest of the files. This is a string that defines a single language tag only.
            type: string
            format: ietf
            example: eng
          name:
            description: Full name of the system to be displayed to customers
            type: string
            example: FreeBike
          short-name:
            description: Optional abbreviation for a system
            type: string
            example: FB
          operator:
            description: Name of the operator of the system
            type: string
            example: FreeBike
          url:
            description: The URL of the transport operator. The value must be a fully qualified URL that includes http:// or https://, and any special characters in the URL must be correctly escaped.
            type: string
            example: https://www.rentmyfreebike.com
          purchase-url:
            description: A fully qualified URL where a customer can purchase a membership or learn more about purchasing memberships
            type: string
            example: https://www.rentmyfreebike.com/purchase
          start-date:
            description: String in the form YYYY-MM-DD representing the date that the system began operations
            type: string
            format: date
            example: 2019-01-01
          phone-number:
            description: A single voice telephone number for the specified system. This field is a string value that presents the telephone number as typical for the system's service area. It can and should contain punctuation marks to group the digits of the number.
            type: string
            example: 555-12345
          email:
            description: A single contact email address for customers to address questions about the system
            type: string
            format: email
            example: rent@freebike.com
          timezone:
            description: The time zone where the system is located. Time zone names never contain the space character but may contain an underscore. Please refer to the "TZ" value in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones for a list of valid values
            type: string
            example: IST
          license-url:
            description: A fully qualified URL of a page that defines the license terms for the GBFS data for this system, as well as any other license terms the system would like to define (including the use of corporate trademarks, etc)
            type: string
            example: https://www.rentmyfreebike.com/license
          type-of-system:
            description: Describes the type of system
            type: string
            enum: [FREE-FLOATING, STATION-BASED, VIRTUAL-STATION-BASED]
            example: free-floating
          conditions:
            description: Added to include possibility to communicatie general rental conditions like minimum age, max. reservation time etc. [amended]
            type: string
    system-pricing-plan:
      required:
       - plan-id
       - name
       - currency
       - price
       - isTaxable
       - description
      properties:
        plan-id:
          type: string
          description: a unique identifier for this plan in the system
          example: freeplan1
        url:
          type: string
          description: a fully qualified URL where the customer can learn more about this particular scheme
          example: https://www.rentmyfreebike.com/freeplan
        name:
          type: string
          description: name of this pricing scheme
          example: Free Plan
        currency:
          type: string
          description: currency this pricing is in
          format: iso_4217
          example: XDR
        fare:
          $ref: '#/components/schemas/fare'
        is-taxable:
          type: boolean
          description: false indicates that no additional tax will be added (either because tax is not charged, or because it is included) true indicates that tax will be added to the base price
        description:
          type: string
          description: Text field describing the particular pricing plan in human readable terms. This should include the duration, price, conditions, etc. that the publisher would like users to see. This is intended to be a human-readable description and should not be used for automatic calculations
          example: Unlimited plan for free bikes, as long as you don't break them!    
    system-region:
      required:
       - region-id
       - name
      properties:
        region-id:
          type: string
          description: Unique identifier for this region
          example: BikeRegion
        name:
          type: string
          description: Public name for this region
          example: BikeTown    
    time:
      description: A time description in hh:mm, 24-hour notation.
      type: object
      properties: 
        time: 
          type: string
        timezone: 
          type: string
    timestamp:
      description: A UTC timestamp (number of milliseconds in a Date object since January
        1, 1970, 00:00:00)
      example: 1546336800
    token:
      description: The validity token (such as booking ID, travel ticket etc.) that MaaS clients will display to validate the trip when starting the leg.
      properties:
        validity-duration:
          description: The rules that MaaS will interpret to schedule, -validate or cancel the booking.
          type: object
          properties:
            from:
              description: The starting time from which the ticket is valid
              $ref: '#/components/schemas/timestamp'
            to:
              description: The finishing time the ticket is valid for
              $ref: '#/components/schemas/timestamp'
            meta:
              description: Arbitrary metadata the TO may pass along the ticket to the client (e.g. a booking code, base64 encoded binary)
              type: object
    type-of-asset:
      required:
        - type-id
        - name
      properties:
        type-id:
          type: string
          description: unique identifier of a type
        name:
          type: string
          description: name of asset type
        travel-abroad:
          type: boolean
          description: true indicates asset is allowed to travel abroad
        air-conditioning:
          type: boolean
          description: true indicates airconditioning required
        asset-class:
          type: string
          description: classification of the asset
        brand:
          type: string
          description: brand of the asset
        cabrio:
          type: boolean
          description: true indicates cabrio required
        colour:
          type: string
          description: colour of the asset
        cargo:
          type: string
          description: describes options to carry cargo  
        easy-accessibility:
          type: string
          description: describes if asset is or needs to be easily accessible 
          enum: [LIFT, ESCALATOR, GROUND LEVEL, SIGHTIMPAIRMENT, HEARINGIMPAIRMENT, WHEELCHAIR]
        gears:
          type: integer
          description: number of gears of the asset
        gearbox:
          type: string
          description: type of gearbox
          enum: [MANUAL, AUTOMATIC, SEMIAUTOMATIC]
        image:
          type: string
          format: url
        infant-seat:
          type: boolean
          description: true indicates infant seat required
        persons:
          type: integer
          description: number of persons able to use the asset
        pets:
          type: boolean
          description: true indicates pets are allowed on asset
        propulsion:
          type: string
          description: way in which the asset is powered
          enum: [MUSCLE, ELECTRIC, GASOLINE, DIESEL, HYBRID, LPG, HYDROGEN]
        smoking:
          type: boolean
          description: true indicates smoking is allowed on asset
        state-of-charge:
          type: integer
          minimum: 0
          maximum: 100
          description: percentage of charge available
        towing-hook:
          type: boolean
          description: true indicates towing hook required
        underground-parking:
          type: boolean
          description: true indicates underground parking is allowed with asset
        winter-tires:
          type: boolean
          description: true indicates winter tires required
        other:
          type: string
          description: free text to describe asset
    
